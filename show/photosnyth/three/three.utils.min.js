var mUtils=function(){var a;var b;var d=new Date().getTime();var c=true;this.ShowInfo=function(e,g){a=e.createElement("div");e.body.appendChild(a);var f=e.createElement("div");f.style.position="absolute";f.style.top="10px";f.style.width="100%";f.style.textAlign="center";f.innerHTML=g;a.appendChild(f)};this.EnableFPS=function(e){a=e.createElement("div");e.body.appendChild(a);b=new Stats();b.domElement.style.position="absolute";b.domElement.style.top="0px";a.appendChild(b.domElement)};this.UpdateFPS=function(){if(c){b.domElement.style.display="block"}else{b.domElement.style.display="none";return}b.update()};this.UpdateActive=function(){d=new Date().getTime()};this.GetActive=function(){var e=new Date().getTime();var f=e-d;if(f>3000){c=false}else{c=true}return c};this.CreateSkyboxOneImage=function(l,k,h){if(!h){h=100000}var j=new THREE.Texture([]);j.format=THREE.RGBFormat;j.flipY=false;var f=new THREE.ImageLoader();f.load(l,function(n){var m=function(o,r){var p=document.createElement("canvas");p.width=k;p.height=k;var q=p.getContext("2d");q.drawImage(n,-o*k,-r*k);return p};j.image[0]=m(2,1);j.image[1]=m(0,1);j.image[2]=m(1,0);j.image[3]=m(1,2);j.image[4]=m(1,1);j.image[5]=m(3,1);j.needsUpdate=true});var e=THREE.ShaderLib.cube;e.uniforms.tCube.value=j;var g=new THREE.ShaderMaterial({fragmentShader:e.fragmentShader,vertexShader:e.vertexShader,uniforms:e.uniforms,depthWrite:false,side:THREE.BackSide});var i=new THREE.Mesh(new THREE.BoxGeometry(h,h,h),g);return i};this.CreateTextureCube=function(h,g,j){var f=[h+"px"+g,h+"nx"+g,h+"py"+g,h+"ny"+g,h+"pz"+g,h+"nz"+g];var e=this;var i=THREE.ImageUtils.loadTextureCube(f,null,function(k){e.UpdateActive();if(j){j(i)}});return i};this.CreateSkybox=function(l,j,m,i){if(!m){m=1000000}var e;var g=THREE.ShaderLib.cube;var f=this;if(i){e=this.CreateTextureCube(i,j,function(n){e=f.CreateTextureCube(l,j,function(o){g.uniforms.tCube.value=e})});g.uniforms.tCube.value=e}else{e=this.CreateTextureCube(l,j);g.uniforms.tCube.value=e}var h=new THREE.ShaderMaterial({fragmentShader:g.fragmentShader,vertexShader:g.vertexShader,uniforms:g.uniforms,depthWrite:false,side:THREE.BackSide});var k=new THREE.Mesh(new THREE.BoxGeometry(m,m,m),h);return k};this.CreateLineMeshFromTo=function(u,v,m,n){var s=new THREE.BufferGeometry();var o=new THREE.LineBasicMaterial({vertexColors:true});s.addAttribute("position",Float32Array,m,3);s.addAttribute("color",Float32Array,m,3);var k=s.attributes.position.array;var f=s.attributes.color.array;var e=n;for(var j=0;j<m;j++){var w=j%2;var l=w*u.x+(1-w)*v.x;var h=w*u.y+(1-w)*v.y;var g=w*u.z+(1-w)*v.z;var t=Math.random()*e-e/2+l;var q=Math.random()*e-e/2+h;var p=Math.random()*e-e/2+g;k[j*3]=t;k[j*3+1]=q;k[j*3+2]=p;f[j*3]=(t/(e+l))+0.5;f[j*3+1]=(q/(e+h))+0.5;f[j*3+2]=(p/(e+g))+0.5}s.computeBoundingSphere();mesh=new THREE.Line(s,o);return mesh}};
